{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Clusters.svelte",
    "../../Icon.svelte",
    "../../LODUnits.svelte",
    "../../Legend.svelte",
    "../../Sequences.svelte",
    "../../Steps.svelte",
    "../../TestInfo.svelte",
    "../../TestsTable.svelte",
    "../../Timeline.svelte",
    "../../ViralMaterials.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte'\n\n\timport { context, grabCsv, corsBase, testUrl, methodsUrl, getNickname, steps, parseStep, parseTime, getOrdinalLevel, ordinalLevels, parseLocation, parseDate, formatDate } from \"./data-utils\"\n\timport { flatten, getUrlParams } from \"./utils\"\n\timport Icon from \"./Icon.svelte\"\n\timport Steps from \"./Steps.svelte\"\n\timport Timeline from \"./Timeline.svelte\"\n\timport TestsTable from \"./TestsTable.svelte\"\n\timport Clusters from \"./Clusters.svelte\"\n\timport TestInfo from \"./TestInfo.svelte\"\n\timport Sequences from \"./Sequences.svelte\"\n\timport LODUnits from \"./LODUnits.svelte\"\n\timport ViralMaterials from \"./ViralMaterials.svelte\"\n\n\tlet tests = []\n\tlet methods = []\n\tlet sections = [\"steps\"]\n\tlet missingMethods = []\n\tlet activeTest = null\n\tlet title = null\n\tlet caption = null\n\n\tonMount(async () => {\n\t\tconst urlParams = getUrlParams()\n\t\tsections = urlParams[\"section\"] ? urlParams[\"section\"].split(\",\") : [\"steps\"]\n\t\tconst contextData = sections.length > 1 ? {} : context[sections[0]] || {}\n\t\ttitle = contextData.title\n\t\tcaption = contextData.caption\n\n\t\tlet testResponse = await grabCsv(testUrl)\n\t\ttests = testResponse.map(d => ({\n\t\t\t// ...d,\n\t\t\tname: d[\"Test Name\"],\n\t\t\tnickname: getNickname(d[\"Test Name\"]),\n\t\t\tdate: d[\"Date of EUA\"],\n\t\t\tsummary: d[\"Diagnostic Summary\"],\n\t\t\ttime: parseTime(d[\"Time (Estimated)\"]),\n\t\t\tcost: getOrdinalLevel(d[\"Cost\"]),\n\t\t\tlocation: parseLocation(d[\"Centralized/POC\"]),\n\t\t\tapprovals: d[\"Approvals\"],\n\t\t\ttraining: d[\"Training Requirements\"],\n\t\t\tnotes: d[\"Notes\"],\n\t\t\tsteps: steps.map((stepName, i) => (\n\t\t\t\tparseStep(d[stepName], i)\n\t\t\t)),\n\t\t\tunparsedSteps: steps.map((stepName, i) => (\n\t\t\t\td[stepName]\n\t\t\t)),\n\t\t})).sort((a,b) => parseDate(b.date) - parseDate(a.date))\n\t\t// console.log(testResponse, tests)\n\n\t\tlet methodsResponse = await grabCsv(methodsUrl)\n\t\tmethods = methodsResponse.map(d => ({\n\t\t\t// ...d,\n\t\t\tname: d[\"Feature Name\"],\n\t\t\tdescription: d[\"Descriptive Blurb\"],\n\t\t\tlinks: d[\"Authoritative Links\"],\n\t\t\tstepIndex: steps.indexOf(d[\"Step\"]),\n\t\t\ttime: parseTime(d[\"Time\"]),\n\t\t\tcost: getOrdinalLevel(d[\"Cost\"]),\n\t\t\tsensitivity: getOrdinalLevel(d[\"Sensitivity\"]),\n\t\t\tlocation: d[\"Centralized/POC\"] == \"-\" ? null : d[\"Centralized/POC\"],\n\t\t\tapprovals: d[\"Approvals\"],\n\t\t\ttraining: d[\"Training Requirements\"] == \"no\",\n\t\t\tequipment: d[\"Equipment Requirements\"],\n\t\t\totherSteps: d[\"Required other steps\"],\n\t\t\tnotes: d[\"Notes\"],\n\t\t}))\n\t\t// console.log(methodsResponse, methods)\n\t})\n\n\tconst updateMethods = () => {\n\t\tif (!tests.length || !methods.length) return\n\n\t\tmissingMethods = steps.map((step, i) => ([\n\t\t\t...new Set(\n\t\t\t\tflatten(\n\t\t\t\t\ttests.map(({ steps }) => steps[i])\n\t\t\t\t)\n\t\t\t)\n\t\t].filter(d => (\n\t\t\t!methods.filter(({ stepIndex }) => (\n\t\t\t\tstepIndex == i\n\t\t\t)).map(d => d.name.toLowerCase()).includes(d)\n\t\t))))\n\n\t\tmethods = methods.map(method => ({\n\t\t\t...method,\n\t\t\tnumTimesUsed: tests.filter(({ steps }) => (\n\t\t\t\tsteps[method.stepIndex].includes(method.name.toLowerCase())\n\t\t\t)).length,\n\t\t}))\n\t}\n\n\t$: tests, methods, updateMethods()\n\n\t$: activeSteps = !activeTest ? null : activeTest.steps\n\n</script>\n\n<main>\n\t{#if title}\n\t\t<div class=\"title\">\n\t\t\t<h2>{ title }</h2>\n\t\t</div>\n\t{/if}\n\t<div class=\"main\">\n\t\t{#if sections.includes(\"sequences\")}\n\t\t\t<Sequences />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"lod_units\")}\n\t\t\t<LODUnits />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"viral_materials\")}\n\t\t\t<ViralMaterials />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"timeline\")}\n\t\t\t<Timeline data={tests} />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"table\")}\n\t\t\t<TestsTable data={tests} />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"scatter\")}\n\t\t\t<Clusters data={tests} />\n\t\t{/if}\n\n\t\t{#if sections.includes(\"steps\")}\n\t\t\t<div class=\"test-list\">\n\t\t\t\t<div class=\"steps\">\n\t\t\t\t\t<Steps {methods} {missingMethods} {activeSteps} />\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"list\">\n\t\t\t\t\t<div class=\"tests\">\n\t\t\t\t\t\t<h6 class=\"list-title\">Tests</h6>\n\t\t\t\t\t\t{#each tests as test}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"test\"\n\t\t\t\t\t\t\t\tclass:active={activeTest == test}\n\t\t\t\t\t\t\t\ton:mouseenter={() => activeTest = test}>\n\t\t\t\t\t\t\t\t{ test.name }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{#if activeTest && activeTest == test}\n\t\t\t\t\t\t\t\t<div class=\"test-info--inline\">\n\t\t\t\t\t\t\t\t\t<TestInfo test={activeTest} onClose={() => activeTest = null} isInline />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if activeTest}\n\t\t\t\t\t\t<div class=\"test-info\">\n\t\t\t\t\t\t\t<TestInfo test={activeTest} onClose={() => activeTest = null} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n\n\t{#if caption}\n\t\t<div class=\"caption\">{@html caption }</div>\n\t{/if}\n</main>\n\n<style>\n\t@import url('https://rsms.me/inter/inter.css');\n\n\t:global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t:global(body) {\n\t\tpadding: 0;\n\t\tcolor: #3A3253;\n\t\tfont-family: 'Inter', sans-serif;\n\t}\n\t:global(h6) {\n\t\tmargin: 0.6em 0;\n\t\tfont-size: 0.8em;\n\t\ttext-transform: uppercase;\n\t\tletter-spacing: 0.1em;\n\t}\n\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmax-height: 100vh;\n\t\toverflow: hidden;\n\t}\n\n\t.title {\n\t\tflex: 0 0 1rem;\n\t\tpadding: 1rem 1.6rem;\n\t\tborder-bottom: 1px solid;\n\t\tmax-width: 1050px;\n    margin: 0 auto;\n    width: 100%;\n\t}\n\t.title h2 {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t.main {\n\t\tflex: 3;\n\t\t/* overflow: auto; */\n\t\tdisplay: flex;\n\t\toverflow: hidden;\n\t}\n\t.caption {\n\t\tflex: 0 0 2rem;\n\t\tpadding: 1rem 1.6rem;\n\t\tfont-weight: 500;\n\t\tfont-size: 0.7em;\n\t\tline-height: 1.3em;\n\t\tbackground: #f4f4f4;\n\t\tborder-top: 1px solid;\n\t\tmax-width: 1050px;\n    margin: 0 auto;\n    width: 100%;\n\t}\n\n\t.test-list {\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tfont-size: 0.8em;\n\t\tmargin: 0 auto;\n\t\t/* margin-bottom: 6px; */\n\t\t/* height: 100%; */\n\t\t/* overflow: hidden; */\n\t}\n\n\t.list {\n\t\tposition: relative;\n\t\tflex: 0 0 20em;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\twidth: 20em;\n\t\tflex-direction: column;\n\t}\n\t.list-title {\n\t\tpadding-left: 1.7em;\n\t}\n\t.tests {\n\t\tflex: 1;\n\t\tpadding: 1em;\n\t\tpadding-bottom: 3em;\n\t\toverflow: auto;\n\t}\n\n\t.test {\n\t\tpadding: 0.6em 1.6em;\n\t\tfont-size: 0.9em;\n\t\tcursor: pointer;\n\t}\n\t.test:hover {\n\t\tbackground: #E1DCE4;\n\t}\n\t.test.active {\n\t\tbackground: #E1DCE4;\n\t\tfont-weight: 700;\n\t}\n\t.steps {\n\t\tflex: 1;\n\t\t/* position: sticky; */\n\t\t/* top: 0; */\n    align-self: flex-start;\n\t\t/* padding: 0 3em; */\n\n\t\tmax-width: 96%;\n    max-height: 100vh;\n\t\theight: 100%;\n    overflow: auto;\n\t}\n\t.test-info {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: flex-end;\n\t\tposition: fixed;\n\t\tbottom: 8em;\n\t\tright: 33em;\n\t\tmargin-bottom: 1px;\n\t\twidth: 30em;\n\t\tmax-height: 50vh;\n\t\theight: 40em;\n\t}\n\t.test-info--inline {\n\t\tdisplay: none;\n\t}\n\t@media (max-width: 820px) {\n\t\t.test-info {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.test-info--inline {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t@media (max-width: 800px) {\n\t\t.test-list {\n\t\t\twidth: 100%;\n\t\t}\n\t\t.tests {\n\t\t\tpadding-left: 0;\n\t\t}\n\t\t.test-info {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.test-info--inline {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n</style>",
    "<script>\n  import { extent } from \"d3-array\"\n  import { scaleLinear, scaleSqrt } from \"d3-scale\"\n  import { timeMonth } from \"d3-time\"\n  import { timeFormat } from \"d3-time-format\"\n  import { forceSimulation, forceX, forceY, forceCollide, forceRadial } from \"d3-force\"\n\n  import { flatten, getOrdinal, rectCollide } from \"./utils\"\n  import { ordinalLevels, locationColors, parseDate } from \"./data-utils\"\n\n  export let data = []\n\n  let width = 1200\n  let height = 590\n\n  const formatDate = timeFormat(\"%B %-d\")\n  const formatDay = timeFormat(\"%-d\")\n  const formatYear = timeFormat(\"%Y\")\n  const xAccessor = d => d.time[0]\n  const x1Accessor = d => d.time[1]\n  const yAccessor = d => d.cost\n  const rAccessor = d => d.cost\n  const colorAccessor = d => locationColors[d.location[0]] || \"#CDCFD8\"\n\n  let hoveredPoint = null\n\n  $: rScale = scaleSqrt()\n    .domain(extent(data, rAccessor))\n    .range([5, 20])\n\n  $: xScale = scaleLinear()\n    .domain([0, 60 * 5.15])\n    .range([0, width])\n    // .clamp(true)\n\n  $: xTicks = [\n    [\"1 hour\", xScale(60 * 1)],\n    // [\"2 hours\", xScale(60 * 2)],\n    [\"3 hours\", xScale(60 * 3)],\n    // [\"4 hours\", xScale(60 * 4)],\n    [\"5 hours\", xScale(50 * 6)],\n    // [\"6 hours\", xScale(60 * 6)],\n    // [\"12 hours\", xScale(60 * 12)],\n    // [\"1 day\", xScale(60 * 24)],\n  ]\n\n  $: yPositions = [\n    0,\n    ...new Array(ordinalLevels.length + 1).fill(0).map((_, i) => (\n      height - (height / 3) * (i + 0.5)\n    ))\n  ]\n\n  $: yTicks = [\n    [\"more expensive\", yPositions[3] - (height / 6)],\n    [\"medium price\", yPositions[2] - (height / 6)],\n    [\"cheaper\", yPositions[1] - (height / 6)],\n  ]\n\n  $: parsedTests = data.map(d => {\n    const x0 = xScale(xAccessor(d))\n    const x1 = xScale(x1Accessor(d))\n    if (!xAccessor(d) || !yAccessor(d)) return\n\n    return {\n      ...d,\n      x0,\n      x1,\n      x: (x1 - x0) / 2 + x0,\n      xMid: (x1 - x0) / 2 + x0,\n      yMid: yPositions[yAccessor(d)],\n      y: yPositions[yAccessor(d)],\n      r: width < 600 ? 15 : 19,\n      color: colorAccessor(d),\n    }\n  }).filter(d => d && d.xMid < width)\n\n  let adjustedTests = []\n  let labels = []\n\n  const moveTests = () => {\n    adjustedTests = parsedTests\n    let simulation = forceSimulation()\n      // .force(\"x\", forceX(d => d.x).strength(1))\n      .force(\"x\", forceX(d => d.xMid).strength(1))\n      .force(\"y\", forceY(d => d.yMid))\n      .force(\"collide\", forceCollide(d => d.r + 6).strength(0.6))\n      .nodes(adjustedTests)\n      .stop()\n\n    new Array(30).fill(0).forEach((_, i) => {\n      simulation.tick()\n      adjustedTests.forEach(d => {\n        d.y = Math.max(\n          d.yMid - (height / 6),\n          Math.min(\n            d.yMid + (height / 6),\n            d.y,\n          )\n        )\n      })\n    })\n    labels = parsedTests.map(d => {\n      const textWidth = d.nickname.length * 9\n\n    var velocity = Math.random() * 2 + 1\n    var angle = Math.random() * 360\n      return {\n        ...d,\n        x: Math.min(\n          width - textWidth * 0.8,\n          Math.max(\n            // textWidth / 2,\n            d.x - d.r / 2,\n          )\n        ),\n        y: d.y + 5,\n        vx: velocity * Math.cos(angle * Math.PI / 180),\n        vy: velocity * Math.sin(angle * Math.PI / 180),\n        textWidth,\n        width: textWidth,\n        height: 23,\n      }\n    })\n    const collisionForce = rectCollide()\n      .size(d => [d.textWidth, d.height])\n\n    let simulation2 = forceSimulation()\n      .force(\"collide\", collisionForce)\n      .nodes(labels)\n      .stop()\n\n    new Array(30).fill(0).forEach((_, i) => {\n      simulation2.tick()\n    })\n  }\n\n  $: parsedTests, moveTests()\n\n\n\n</script>\n\n<div class=\"wrapper\">\n  <div class=\"c\" bind:clientWidth={width}>\n    <div class=\"title\">\n      Each circle is a specific test, processed at either <span style={`color: ${locationColors[\"poc\"]}; font-weight: 700`}>the point of care</span> or <span style={`color: ${locationColors[\"centralized\"]}; font-weight: 700`}>in a centralized location</span>\n    </div>\n    <div class=\"chart\">\n      <!-- <div class=\"legend\">\n        <div class=\"legend-item\">\n          <div class=\"legend-item-square\" style={`color: ${locationColors[\"poc\"]}`} />\n          <div class=\"legend-item-label\">\n            POC\n          </div>\n        </div>\n        <div class=\"legend-item\">\n          <div class=\"legend-item-square\" style={`color: ${locationColors[\"centralized\"]}`} />\n          <div class=\"legend-item-label\">\n            Centralized\n          </div>\n        </div>\n      </div> -->\n      <svg {width} {height}>\n        {#each yTicks as [tick, y]}\n          <rect\n            class=\"tier\"\n            y={y}\n            {width}\n            height={height / 3 - 20}\n          />\n          <text\n            class=\"y-tick\"\n            x={28}\n            y={y + 23}\n          >\n            { tick }\n          </text>\n        {/each}\n        {#each xTicks as [tick, x]}\n          <text\n            class=\"x-tick\"\n            x={x}\n            y={height + 23}\n          >\n            { tick }\n          </text>\n          <line\n            class=\"tick-line\"\n            x1={x}\n            x2={x}\n            y1={height - 3}\n            y2={height + 3}\n          />\n        {/each}\n        <text\n          class=\"x-label\"\n          x={10}\n          y={height + 6}\n        >\n          Processing\n        </text>\n        <text\n          class=\"x-label\"\n          x={10}\n          y={height + 23}\n        >\n          Time\n        </text>\n        {#each adjustedTests as test}\n          <circle\n            class=\"test\"\n            cx={test.x}\n            cy={test.y}\n            r={test.r}\n            fill={test.color}\n            on:mouseenter={() => hoveredPoint = test}\n            on:mouseleave={() => hoveredPoint = null}\n          />\n        {/each}\n        {#each labels as { x, y, nickname }}\n          <text class=\"name name-bg\" {x} {y}>\n            { nickname }\n            <!-- { name.split(/ /g)[0] }... -->\n          </text>\n          <text class=\"name\" {x} {y}>\n            { nickname }\n            <!-- { name.split(/ /g)[0] }... -->\n          </text>\n        {/each}\n      </svg>\n      {#if hoveredPoint}\n        <div class=\"tooltip\" style={`transform: translate(calc(${\n          Math.min(\n            width - 120,\n            Math.max(\n              120,\n              hoveredPoint.x,\n            )\n          )\n        }px - 50%), calc(${\n          hoveredPoint.y\n        }px + ${\n          hoveredPoint.y < 200 ? \"4em\" : \"-100%\"\n        }))`}>\n          <h3 class=\"tooltip-name\">\n            { hoveredPoint.name }\n          </h3>\n          <div class=\"summary\">\n            { hoveredPoint.summary }\n          </div>\n          {#if hoveredPoint.date}\n            <h6>EUA approval date</h6>\n            <div class=\"date\">\n              { formatDate(parseDate(hoveredPoint.date)) }<sup>{\n                getOrdinal(formatDay(+parseDate(hoveredPoint.date)))\n              }</sup>, { formatYear(parseDate(hoveredPoint.date)) }\n            </div>\n          {/if}\n          {#if hoveredPoint.notes}\n            <h6>Notes</h6>\n            <div>\n              { hoveredPoint.notes }\n            </div>\n          {/if}\n          <div class=\"infos\">\n            <div class=\"info\">\n              <h6>Processing Time</h6>\n              <div>\n                {#if hoveredPoint.time[2]}\n                  { hoveredPoint.time[2] }\n                {:else}\n                  <i>no information available</i>\n                {/if}\n              </div>\n            </div>\n            <div class=\"info cost\">\n              <h6>Cost</h6>\n              <div>\n                {#if hoveredPoint.cost}\n                  {#each new Array(hoveredPoint.cost || 0).fill(0) as _}\n                    $\n                  {/each}\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style>\n  .wrapper {\n    margin: 1em auto;\n    width: calc(100% - 1.5rem);\n    margin-bottom: 6em;\n    max-width: 1050px;\n  }\n  .c {\n    position: relative;\n    height: 590px;\n    width: 100%;\n    /* padding-top: 3em; */\n    font-size: 0.9em;\n  }\n  .chart {\n    position: relative;\n  }\n  svg {\n    overflow: visible;\n  }\n  .test {\n    /* fill: #256D69; */\n    /* stroke: #256D69; */\n    /* stroke-width: 9; */\n    /* fill-opacity: 0.6; */\n    mix-blend-mode: multiply;\n    stroke-linecap: round;\n  }\n  text {\n    text-anchor: middle;\n    font-size: 0.9em;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n  }\n  .y-tick {\n    text-anchor: start;\n    font-weight: 700;\n    fill: #787d92;\n  }\n  .x-label {\n    text-anchor: start;\n    font-size: 0.8em;\n    font-weight: 700;\n    fill: #787d92;\n  }\n  .x-tick {\n    font-size: 0.8em;\n    font-weight: 700;\n    fill: #787d92;\n  }\n  .tick-line {\n    stroke: #787d92;\n    stroke-width: 1;\n  }\n  .name-bg {\n    stroke: #f4f4f4;\n    stroke-width: 2;\n    mix-blend-mode: soft-light;\n  }\n  .name {\n    font-size: 0.8em;\n    font-weight: 600;\n    text-anchor: start;\n    /* shape-rendering: crispEdges; */\n  }\n  .tier {\n    pointer-events: none;\n    fill: #f4f4f4;\n  }\n  .legend {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.3em;\n  }\n  .legend-item {\n    flex: none;\n    display: flex;\n    align-items: center;\n    margin-left: 1em;\n  }\n  .legend-item-square {\n    height: 0.9em;\n    width: 0.9em;\n    background: currentColor;\n  }\n  .legend-item-label {\n    margin-left: 0.4em;\n    font-size: 0.9em;\n    font-weight: 700;\n    color: #787d92;\n  }\n  text {\n    pointer-events: none;\n  }\n  .title {\n    padding: 0 0 0.6em 1.9em;\n  }\n  .tooltip {\n    position: absolute;\n    top: -2em;\n    left: 0;\n    /* width: 20em; */\n    max-width: 20em;\n    /* margin-left: -10em; */\n    /* text-align: center; */\n    background: white;\n    padding: 1em 1.3em;\n    font-size: 0.8em;\n    line-height: 1.3em;\n    box-shadow: 0 6px 8px rgba(52, 73, 94, 0.2), 0 1px 1px rgba(52, 73, 94, 0.1);\n    pointer-events: none;\n  }\n\t.steps {\n\t\tmargin-bottom: 1.5em;\n\t}\n\t.step {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 0.6em;\n\t}\n\t.step-index {\n    margin-left: 0;\n\t\tmargin-right: 0.6em;\n    opacity: 0.5;\n\t}\n  h3 {\n    margin-top: 0;\n    margin-bottom: 0.3em;\n    font-weight: 800;\n  }\n\ti {\n\t\tfont-style: italic;\n\t\topacity: 0.6;\n\t}\n  h6 {\n    margin-top: 1.6em;\n    margin-bottom: 0.3em;\n  }\n  .summary {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n  .infos {\n    display: flex;\n    justify-content: space-between;\n  }\n  .cost {\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let name\n  export let direction = \"n\"\n\n  const paths = {\n    arrow: [\n      \"M9.5 0C10.1558 0 10.6875 0.531662 10.6875 1.1875V17.8125C10.6875 18.4683 10.1558 19 9.5 19C8.84416 19 8.3125 18.4683 8.3125 17.8125V1.1875C8.3125 0.531662 8.84416 0 9.5 0Z\",\n      \"M0.347811 8.66031C0.811558 8.19656 1.56344 8.19656 2.02719 8.66031L9.5 16.1331L16.9728 8.66031C17.4366 8.19656 18.1884 8.19656 18.6522 8.66031C19.1159 9.12406 19.1159 9.87594 18.6522 10.3397L10.3397 18.6522C9.87594 19.1159 9.12406 19.1159 8.66031 18.6522L0.347811 10.3397C-0.115937 9.87594 -0.115937 9.12406 0.347811 8.66031Z\",\n    ],\n    \"arrow-swoop\": [\n      \"M5.36765 0.587956C5.46303 0.493131 5.57277 0.421499 5.68985 0.373059ZM6.77761 0.587956C6.59682 0.408236 6.3477 0.29718 6.07263 0.29718C5.93704 0.29718 5.80776 0.324166 5.68985 0.373059M6.77761 0.587956C6.77846 0.588793 6.7793 0.589631 6.78014 0.590471ZM5.07263 3.71139L1.77974 7.00429C1.38921 7.39481 0.756049 7.39481 0.365525 7.00429C-0.0249992 6.61376 -0.0249992 5.9806 0.365525 5.59007L5.36513 0.590471M5.07263 3.71139V13.2972C5.07263 14.6233 5.59942 15.895 6.5371 16.8327C7.47478 17.7704 8.74655 18.2972 10.0726 18.2972H17.0726C17.6249 18.2972 18.0726 17.8495 18.0726 17.2972C18.0726 16.7449 17.6249 16.2972 17.0726 16.2972H10.0726C9.27698 16.2972 8.51392 15.9811 7.95131 15.4185C7.3887 14.8559 7.07263 14.0928 7.07263 13.2972V3.71139L10.3655 7.00429C10.756 7.39481 11.3892 7.39481 11.7797 7.00429C12.1703 6.61376 12.1703 5.9806 11.7797 5.59007L6.78014 0.590471\",\n    ],\n    centralized: [\n      \"M10.0609 2.56094C5.91878 2.56094 2.56091 5.91881 2.56091 10.0609C2.56091 14.2031 5.91878 17.5609 10.0609 17.5609C14.203 17.5609 17.5609 14.2031 17.5609 10.0609C17.5609 5.91881 14.203 2.56094 10.0609 2.56094ZM0.560913 10.0609C0.560913 4.81424 4.81421 0.560944 10.0609 0.560944C15.3076 0.560944 19.5609 4.81424 19.5609 10.0609C19.5609 15.3076 15.3076 19.5609 10.0609 19.5609C4.81421 19.5609 0.560913 15.3076 0.560913 10.0609Z\",\n      \"M10.0609 8.06094C8.95634 8.06094 8.06091 8.95637 8.06091 10.0609C8.06091 11.1655 8.95634 12.0609 10.0609 12.0609C11.1655 12.0609 12.0609 11.1655 12.0609 10.0609C12.0609 8.95637 11.1655 8.06094 10.0609 8.06094ZM6.06091 10.0609C6.06091 7.8518 7.85177 6.06094 10.0609 6.06094C12.2701 6.06094 14.0609 7.8518 14.0609 10.0609C14.0609 12.2701 12.2701 14.0609 10.0609 14.0609C7.85177 14.0609 6.06091 12.2701 6.06091 10.0609Z\",\n    ],\n    check: [\n      \"M19.4803 3.00028C20.0661 3.58607 20.0661 4.53582 19.4803 5.1216L8.48034 16.1216C7.89455 16.7074 6.9448 16.7074 6.35902 16.1216L1.35902 11.1216C0.773231 10.5358 0.773231 9.58607 1.35902 9.00028C1.9448 8.4145 2.89455 8.4145 3.48034 9.00028L7.41968 12.9396L17.359 3.00028C17.9448 2.4145 18.8946 2.4145 19.4803 3.00028Z\",\n    ],\n    close: [\n      \"M19.0202 3.7435C19.7622 3.0015 19.7622 1.79849 19.0202 1.0565C18.2782 0.314501 17.0752 0.314501 16.3332 1.0565L10.0767 7.31299L3.82017 1.0565C3.07817 0.314501 1.87516 0.314501 1.13316 1.0565C0.391161 1.79849 0.391161 3.0015 1.13316 3.7435L7.38967 9.99999L1.13316 16.2565C0.391161 16.9985 0.391161 18.2015 1.13316 18.9435C1.87516 19.6855 3.07817 19.6855 3.82017 18.9435L10.0767 12.687L16.3332 18.9435C17.0752 19.6855 18.2782 19.6855 19.0202 18.9435C19.7622 18.2015 19.7622 16.9985 19.0202 16.2565L12.7637 9.99999L19.0202 3.7435Z\",\n    ],\n    poc: [\n      \"M12.9658 1.16072C12.9658 0.608436 13.4135 0.160721 13.9658 0.160721H18.2937C18.846 0.160721 19.2937 0.608436 19.2937 1.16072V5.48865C19.2937 6.04093 18.846 6.48865 18.2937 6.48865C17.7415 6.48865 17.2937 6.04093 17.2937 5.48865V3.57493L14.6729 6.19575C14.2824 6.58628 13.6492 6.58628 13.2587 6.19575C12.8682 5.80523 12.8682 5.17206 13.2587 4.78154L15.8795 2.16072H13.9658C13.4135 2.16072 12.9658 1.71301 12.9658 1.16072Z\",\n      \"M1.29718 6.48865C0.744895 6.48865 0.29718 6.04093 0.29718 5.48865L0.297181 1.16072C0.297181 0.608434 0.744896 0.160718 1.29718 0.160719L5.62511 0.160719C6.17739 0.160719 6.62511 0.608435 6.62511 1.16072C6.62511 1.713 6.17739 2.16072 5.62511 2.16072L3.71139 2.16072L6.33221 4.78154C6.72274 5.17207 6.72274 5.80523 6.33221 6.19576C5.94169 6.58628 5.30852 6.58628 4.918 6.19575L2.29718 3.57493L2.29718 5.48865C2.29718 6.04093 1.84946 6.48865 1.29718 6.48865Z\",\n      \"M6.62512 18.16C6.62512 18.7123 6.17741 19.16 5.62512 19.16L1.29719 19.16C0.744908 19.16 0.297193 18.7123 0.297193 18.16L0.297194 13.8321C0.297194 13.2798 0.744909 12.8321 1.29719 12.8321C1.84948 12.8321 2.29719 13.2798 2.29719 13.8321L2.29719 15.7458L4.91802 13.125C5.30854 12.7344 5.94171 12.7344 6.33223 13.125C6.72275 13.5155 6.72275 14.1487 6.33223 14.5392L3.71141 17.16L5.62512 17.16C6.17741 17.16 6.62512 17.6077 6.62512 18.16Z\",\n      \"M18.2938 12.8321C18.846 12.8321 19.2938 13.2798 19.2938 13.8321L19.2938 18.16C19.2938 18.7123 18.846 19.16 18.2938 19.16L13.9658 19.16C13.4136 19.16 12.9658 18.7123 12.9658 18.16C12.9658 17.6077 13.4136 17.16 13.9658 17.16L15.8796 17.16L13.2587 14.5392C12.8682 14.1487 12.8682 13.5155 13.2587 13.125C13.6493 12.7344 14.2824 12.7344 14.6729 13.125L17.2938 15.7458L17.2938 13.8321C17.2938 13.2798 17.7415 12.8321 18.2938 12.8321Z\",\n    ],\n    money: [\n      \"M6.69792 0.00756836C7.32753 0.00756836 7.83792 0.517964 7.83792 1.14757V17.8676C7.83792 18.4972 7.32753 19.0076 6.69792 19.0076C6.06832 19.0076 5.55792 18.4972 5.55792 17.8676V1.14757C5.55792 0.517964 6.06832 0.00756836 6.69792 0.00756836Z\",\n      \"M2.11092 4.16057C2.82356 3.44793 3.7901 3.04758 4.79792 3.04758H10.4979C11.1275 3.04758 11.6379 3.55797 11.6379 4.18758C11.6379 4.81718 11.1275 5.32758 10.4979 5.32758H4.79792C4.3948 5.32758 4.00818 5.48772 3.72312 5.77277C3.43807 6.05783 3.27792 6.44445 3.27792 6.84758C3.27792 7.25071 3.43807 7.63732 3.72312 7.92238C4.00818 8.20743 4.3948 8.36758 4.79792 8.36758H8.59792C9.60575 8.36758 10.5723 8.76793 11.2849 9.48057C11.9976 10.1932 12.3979 11.1598 12.3979 12.1676C12.3979 13.1754 11.9976 14.1419 11.2849 14.8546C10.5723 15.5672 9.60575 15.9676 8.59792 15.9676H2.13792C1.50832 15.9676 0.997925 15.4572 0.997925 14.8276C0.997925 14.198 1.50832 13.6876 2.13792 13.6876H8.59792C9.00106 13.6876 9.38767 13.5274 9.67273 13.2424C9.95778 12.9573 10.1179 12.5707 10.1179 12.1676C10.1179 11.7644 9.95778 11.3778 9.67273 11.0928C9.38767 10.8077 9.00105 10.6476 8.59792 10.6476H4.79792C3.7901 10.6476 2.82356 10.2472 2.11092 9.53458C1.39828 8.82194 0.997925 7.8554 0.997925 6.84758C0.997925 5.83975 1.39828 4.87321 2.11092 4.16057Z\",\n    ]\n  }\n</script>\n\n<svg viewBox=\"0 0 20 20\" class={`icon--${direction}`}>\n  {#each (paths[name] || []) as path}\n    <path d={path} />\n  {/each}\n</svg>\n\n<style>\n  svg {\n    width: 1em;\n    fill: currentColor;\n    transition: all 0.3s ease-out;\n  }\n  .icon--e {\n    transform: rotate(-90deg);\n  }\n  .icon--s {\n    transform: rotate(180deg);\n  }\n</style>\n",
    "<script>\n  import Segment from \"./PieChart/Segment.svelte\"\n  import Legend from \"./PieChart/Legend.svelte\"\n  import {\n    summarised_data,\n    lod_units,\n    lod_units_top_10_tests_weighted,\n  } from \"./data_summarised\"\n\n  const width = 1000\n  const height = 600\n\n  const radius = 140\n\n  const x = 170\n  const x_chart = 110\n  const x_next = 520\n  const x_center = x + (x_chart * 2 + x_next) / 2\n  const x_percentages = 180\n\n  const y_titles = 20\n  const y_titles_second_line = y_titles + 22\n  const y_graphs = y_titles + 180\n  const y_percentages = -100\n  const y_data_source = 180\n  const y_legends = y_graphs + 240\n\n</script>\n\n<div>\n  <svg {width} {height} class=\"top\" overflow=\"scroll\">\n\n    <svg x={x}>\n      <text x={x_chart} y={y_titles} class=\"chart_title\">LOD Units Used in All EUAs</text>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each lod_units as { ratio, begin, color, label, percentage }}\n          <Segment\n            radius={radius}\n            ratio={ratio}\n            color={color}\n            begin={begin}\n          />\n        {/each}\n\n        {#each lod_units as { color, percentage }, i}\n          <Legend text={percentage} color={color} x={x_percentages} y={y_percentages + i * 50} />\n        {/each}\n\n        <text class=\"data_source\" y={y_data_source}>\n          {@html `Data from ${summarised_data.lod_units.have_parsed} EUAs`}\n        </text>\n      </svg>\n    </svg>\n\n    <svg x={x + x_next}>\n      <text x={x_chart} y={y_titles} class=\"chart_title\">LOD Units in EUAs of Top 10 Tests</text>\n      <text x={x_chart} y={y_titles_second_line} class=\"chart_title\">Used by US Labs Weighted by Usage<tspan baseline-shift=\"super\">*</tspan></text>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each lod_units_top_10_tests_weighted as { ratio, begin, color, label, percentage }}\n          <Segment\n            radius={radius}\n            ratio={ratio}\n            color={color}\n            begin={begin}\n          />\n        {/each}\n\n        {#each lod_units_top_10_tests_weighted as { color, percentage }, i}\n          <Legend text={percentage} color={color} x={x_percentages} y={y_percentages + i * 50} />\n        {/each}\n\n        <text class=\"data_source\" y={y_data_source}>\n          {@html `Data from EUAs of top 10 tests used by US labs.<tspan baseline-shift=\"super\">*</tspan>`}\n        </text>\n      </svg>\n\n    </svg>\n\n    <svg x={x_center - 200} y={y_legends}>\n    {#each lod_units.slice(0, 3) as { label, color }, i}\n      <Legend text={label} color={color} y={i * 50} />\n    {/each}\n    </svg>\n\n    <svg x={x_center + 100} y={y_legends}>\n    {#each lod_units.slice(3) as { label, color }, i}\n      <Legend text={label} color={color} y={i * 50} />\n    {/each}\n    </svg>\n\n  </svg>\n</div>\n\n<style>\n  svg.top {\n    /* overflow: scroll; */\n    margin: 20px 100px;\n  }\n  svg {\n    overflow: visible;\n  }\n  text {\n    text-anchor: start;\n    font-size: 0.8em;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n    pointer-events: none;\n  }\n  text.data_source {\n    font-size: 0.7em;\n    text-anchor: middle;\n  }\n  text.chart_title {\n    text-anchor: middle;\n    font-size: 1em;\n    text-transform: none;\n    font-weight: bold;\n  }\n</style>\n",
    "<script>\n  export let highlighted = false;\n  export let x = 0;\n  export let y = 0;\n  export let text = \"\";\n  export let color = \"blue\";\n  export let size = 20;\n  export let mouseenter = () => {};\n  export let mouseleave = () => {};\n\n  const extra = () => size * (highlighted ? 0.1 : 0)\n  const x1 = () => x - extra()\n  const y1 = () => y - extra()\n  const x2 = () => x + size + extra()\n  const y2 = () => y + size + extra()\n</script>\n\n<g\n  on:mouseenter={mouseenter}\n  on:mouseleave={mouseleave}\n>\n  <path\n    d=\"M{x1()} {y1()} {x2()} {y1()} {x2()} {y2()} {x1()} {y2()} z\"\n    stroke=\"{color}\"\n    stroke-width=\"5\"\n    stroke-linecap=\"square\"\n    stroke-linejoin=\"round\"\n    fill=\"{color}\"\n  ></path>\n  <text\n    x={x + 10 + size}\n    y={y + 5 + size / 2}\n    class={highlighted ? \"highlighted\" : \"\"}\n  >\n    {@html text}\n  </text>\n</g>\n\n<style>\n  text {\n    text-anchor: start;\n    font-size: 0.8em;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n    pointer-events: none;\n  }\n  text.highlighted\n  {\n    font-weight: bold;\n  }\n</style>\n",
    "<script>\n  import Segment from \"./PieChart/Segment.svelte\"\n  import Legend from \"./PieChart/Legend.svelte\"\n  import {\n    summarised_data,\n    primer_probe_sequences__specified,\n    top_10_tests_sequences_specificed,\n    top_10_tests_sequences_specificed_weighted,\n  } from \"./data_summarised\"\n\n  const width = 1000\n  const height = 600\n\n  const x = 140\n  const x_chart = 110\n  const x_next = 375\n  const x_center_right = x + (x_next * 3 + x_chart * 2) / 2\n\n  const y_titles = 20\n  const y_titles_second_line = y_titles + 22\n  const y_graphs = y_titles + 180\n  const y_legends = y_graphs + 200\n\n  const radius = 140\n\n</script>\n\n<div>\n  <svg {width} {height} class=\"top\" overflow=\"scroll\">\n\n    <svg x={x}>\n      <text x={x_chart} y={y_titles} class=\"chart_title\">All EUAs</text>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each primer_probe_sequences__specified as { ratio, begin, color }}\n          <Segment radius={radius} ratio={ratio} color={color} begin={begin} />\n        {/each}\n      </svg>\n\n      <svg y={y_legends}>\n      {#each primer_probe_sequences__specified as { label_w_percentage, color }, i}\n        <Legend text={label_w_percentage} color={color} y={i * 50} />\n      {/each}\n\n        <text class=\"data_source\" x={0} y={150}>\n          {`Data from ${summarised_data.primer_probe_sequences.have_parsed} EUAs`}\n        </text>\n      </svg>\n    </svg>\n\n\n    <text x={x_center_right} y={y_titles} class=\"chart_title\">EUAs Of Top 10 Tests Used By US Labs<tspan baseline-shift=\"super\">*</tspan></text>\n\n    <svg x={x + x_next}>\n      <text x={x_chart} y={y_titles_second_line} class=\"chart_title\">Percentage</text>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each top_10_tests_sequences_specificed as { ratio, begin, color }}\n          <Segment radius={radius} ratio={ratio} color={color} begin={begin} />\n        {/each}\n      </svg>\n\n      <svg y={y_legends}>\n      {#each top_10_tests_sequences_specificed as { label_w_percentage, color }, i}\n        <Legend text={label_w_percentage} color={color} y={i * 50} />\n      {/each}\n      </svg>\n    </svg>\n\n\n    <svg x={x + x_next * 2}>\n      <text x={x_chart} y={y_titles_second_line} class=\"chart_title\">Percentage Weighted By Number Of Labs</text>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each top_10_tests_sequences_specificed_weighted as { ratio, begin, color }}\n          <Segment radius={radius} ratio={ratio} color={color} begin={begin} />\n        {/each}\n      </svg>\n\n      <svg y={y_legends}>\n      {#each top_10_tests_sequences_specificed_weighted as { label_w_percentage, color }, i}\n        <Legend text={label_w_percentage} color={color} y={i * 50} />\n      {/each}\n      </svg>\n    </svg>\n\n    <text class=\"data_source centered\" x={x_center_right} y={y_legends + 150}>\n      {@html `Data from EUAs of top 10 tests used by labs.<tspan baseline-shift=\"super\">*</tspan>`}\n    </text>\n\n  </svg>\n</div>\n\n<style>\n  svg.top {\n    /* overflow: scroll; */\n    margin: 20px 100px;\n  }\n  svg {\n    overflow: visible;\n  }\n  text {\n    text-anchor: start;\n    font-size: 0.8em;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n    pointer-events: none;\n  }\n  text.data_source {\n    font-size: 0.7em;\n  }\n  text.data_source.centered {\n    text-anchor: middle;\n  }\n  text.chart_title {\n    text-anchor: middle;\n    font-size: 1em;\n    text-transform: none;\n    font-weight: bold;\n  }\n</style>\n",
    "<script>\n  import { flip } from \"svelte/animate\"\n  import { scaleLinear } from \"d3-scale\"\n  import { extent } from \"d3-array\"\n\n\timport Icon from \"./Icon.svelte\"\n  import { steps, ordinalLevels } from \"./data-utils\"\n\n  export let methods\n  export let missingMethods\n  export let activeSteps\n\n  $: timeScale = scaleLinear()\n    .domain(extent(methods, d => d.time[0] || 0))\n    .range([0, 100])\n\n  const costOrdinalLabels = [\"cheaper\", \"medium cost\", \"expensive\"]\n  const sensitivityOrdinalLabels = [\"low sensitivity\", \"medium sensitivity\", \"high sensitivity\"]\n\n  let sortedMethods = []\n  const sortMethods = () => {\n    sortedMethods = steps.map((step, i) => (\n      methods\n        .filter(({ stepIndex }) => stepIndex == i)\n        .sort((a, b) => (\n          (activeSteps ? (\n            (activeSteps[i].includes(a.name.toLowerCase()) && !activeSteps[i].includes(b.name.toLowerCase())) ? -100 :\n            (activeSteps[i].includes(b.name.toLowerCase()) && !activeSteps[i].includes(a.name.toLowerCase())) ?  100 :\n              0\n          ) : 0)\n          + (b.numTimesUsed - a.numTimesUsed)\n        ))\n    ))\n  }\n  $: activeSteps, methods, sortMethods()\n</script>\n\n<div class=\"c\">\n  {#each steps as step, i}\n    <div class=\"step\">\n      <div class=\"step-label\">\n        {#if i}\n          <div class=\"step-arrow\">\n            <Icon name=\"arrow\" direction=\"e\" />\n          </div>\n        {/if}\n        <div class=\"step-index\">\n          { i + 1 }\n        </div>\n        { step }\n      </div>\n      <div class=\"step-options\">\n        {#each sortedMethods[i] as { name, description, cost, sensitivity, time, numTimesUsed, notes}, methodI (name)}\n          <div class=\"step-option\" animate:flip={{duration: 600}}>\n            <div class=\"step-option-main\">\n              <div class=\"step-option-text\" class:active={activeSteps && activeSteps[i].includes(name.toLowerCase())}>\n                <div class=\"step-option-name\">\n                  <div class=\"step-option-checkbox\">\n                    {#if activeSteps && activeSteps[i].includes(name.toLowerCase())}\n                      <div class=\"check\">\n                        <Icon name=\"check\" />\n                      </div>\n                    {/if}\n                  </div>\n                  { name }\n                </div>\n                {#if description}\n                  <div class=\"step-option-description\">\n                    { description }\n                  </div>\n                {/if}\n              </div>\n              <div class=\"step-dots\">\n                {#each new Array(numTimesUsed).fill(0) as i}\n                  <div class=\"step-dot\" />\n                {/each}\n              </div>\n              {#if !i && !methodI}\n                <div class=\"note step-dots-note\">\n                  <div class=\"arrow-swoop\">\n                    <Icon name=\"arrow-swoop\" />\n                  </div>\n                  One dot for each test that uses this method\n                </div>\n              {/if}\n            </div>\n            <div class=\"step-bars\">\n              <div class=\"bar\">\n                {#if !i && !methodI}\n                  <div class=\"bar-label\">cost</div>\n                {/if}\n                <div class=\"bar-fill\"\n                  style={`width: ${((cost * 100) / 3) || 0}%`}\n                />\n                <div class=\"bar-value\">{costOrdinalLabels[cost - 1] || \"\"}</div>\n              </div>\n              <div class=\"bar\">\n                {#if !i && !methodI}\n                  <div class=\"bar-label\">time</div>\n                {/if}\n                <div class=\"bar-fill\"\n                  style={`width: ${timeScale(time[0]) || 0}%`}\n                />\n                <div class=\"bar-value\">{time[2] || \"\"}</div>\n              </div>\n              <div class=\"bar\">\n                {#if !i && !methodI}\n                  <div class=\"bar-label\">sensitivity</div>\n                {/if}\n                <div class=\"bar-fill\"\n                  style={`width: ${((sensitivity * 100) / 3) || 0}%`}\n                />\n                <div class=\"bar-value\">{sensitivityOrdinalLabels[sensitivity - 1] || \"\"}</div>\n              </div>\n            </div>\n          </div>\n        {/each}\n        {#each missingMethods[i] || [] as name}\n          <div class=\"step-option-text step-option-temp\" class:active={activeSteps && activeSteps[i].includes(name.toLowerCase())}>\n            { name }\n          </div>\n        {/each}\n      </div>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .c {\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    width: 98%;\n    font-size: 0.8em;\n    padding-left: 0.8rem;\n\t\t/* padding-top: 2em; */\n    /* text-align: center; */\n    /* overflow: hidden; */\n  }\n  .step-label {\n    position: sticky;\n    top: 0;\n    background: white;\n    z-index: 10;\n    height: 3em;\n    display: flex;\n    align-items: center;\n    /* margin-left: -1.5em; */\n    padding-left: 0.5em;\n    margin-bottom: 0.6em;\n    padding: 1em 0;\n    /* justify-content: center; */\n    font-weight: 800;\n    width: 100%;\n  }\n  .step-arrow {\n    position: absolute;\n    left: -1.3em;\n    margin-top: 2px;\n    font-size: 0.8em;\n    opacity: 0.5;\n  }\n  .step-index {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 1.7em;\n    width: 1.7em;\n\t\tflex: none;\n    margin-right: 0.7em;\n    margin-bottom: -0.1em;\n    line-height: 1em;\n    font-size: 0.8em;\n    border: 1px solid;\n    border-radius: 100%;\n  }\n  .step {\n    flex: 1;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    /* padding: 0 1em 0 2em; */\n  }\n  .step-options {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    margin: 0 -0.6em;\n  }\n  .step-option {\n    position: relative;\n    margin: 0.3em;\n    display: flex;\n    padding-right: 2em;\n    padding-left: 1em;\n  }\n  .step-option-main {\n    flex: 3;\n  }\n  .step-option-text {\n    padding: 0.9em 1em;\n    /* background: #E1DCE4; */\n    font-size: 0.9em;\n    border-radius: 3px;\n    border: 1px solid #E1DCE4;\n    box-shadow: 0 6px 8px rgba(52, 73, 94, 0.2), 0 1px 1px rgba(52, 73, 94, 0.1);\n    transition: all 0.2s ease-out;\n  }\n  .step-option-checkbox {\n    width: 1em;\n    height: 1em;\n    background: white;\n    margin-right: 0.6em;\n    margin-left: -1.6em;\n    border-radius: 3px;\n    border: 1px solid #E1DCE4;\n    /* transition: all 0.3s ease-out; */\n  }\n  @keyframes check {\n    0% { width: 0; }\n    100% { width: 1em; }\n  }\n  .check {\n    font-size: 0.8em;\n    overflow: hidden;\n    animation: check 0.5s ease-out;\n  }\n  .step-option-name {\n    display: flex;\n    font-weight: 600;\n  }\n  .step-option-description {\n    position: absolute;\n    background: inherit;\n    margin-top: 0.6em;\n    margin-left: -1em;\n    padding: 1em;\n    font-size: 0.9em;\n    font-weight: 400;\n    line-height: 1.3em;\n    z-index: 100;\n    opacity: 0;\n    pointer-events: none;\n    box-shadow: 0 6px 8px rgba(52, 73, 94, 0.2), 0 1px 1px rgba(52, 73, 94, 0.1);\n    border: 1px solid #3A3253;\n    background: white;\n  }\n  .step-option-text:hover .step-option-description {\n    opacity: 1;\n    /* pointer-events: all; */\n  }\n  .step-option-temp {\n    width: 72%;\n    margin-bottom: 0.5em;\n    margin-left: 0.4em;\n    padding: 0.5em 1em;\n    background: none;\n    font-size: 0.9em;\n    border: 1px dashed rgb(186, 182, 196);\n  }\n  .step-option-text.active {\n    border-color: #3A3253;\n\t\t/* background: #3A3253; */\n\t\t/* color: #E1DCE4; */\n  }\n  .step-option-text.active .step-option-checkbox {\n    color: white;\n    background: #3A3253;\n    border: 1px solid #3A3253;\n  }\n  .step-bars {\n    flex: 1;\n    margin-top: 0.5em;\n  }\n  .bar {\n    position: relative;\n    left: 0;\n    height: 6px;\n    width: 100%;\n    margin-bottom: 3px;\n  }\n  .bar:nth-of-type(1) .bar-fill {\n    background: linear-gradient(\n      to right,\n      #E9D5C5,\n      #E2A38C\n    );\n    background-size: 25em;\n  }\n  .bar:nth-of-type(2) .bar-fill {\n    background: linear-gradient(\n      to right,\n      #bfd5fc,\n      #7bc4b7\n    );\n    background-size: 25em;\n  }\n  .bar:nth-of-type(3) .bar-fill {\n    background: linear-gradient(\n      to right,\n      #d5c7db,\n      #928ab4\n    );\n    background-size: 25em;\n  }\n  .bar-fill {\n    position: relative;\n    height: 100%;\n    background: #16535E;\n    border-radius: 0 3px 3px 0;\n  }\n  .bar-label {\n    position: absolute;\n    font-size: 0.6em;\n    top: -0.3em;\n    left: 0.4em;\n    font-weight: 600;\n    /* transform: translateX(-100%); */\n    z-index: 10;\n  }\n  .bar-value {\n    position: absolute;\n    font-size: 0.6em;\n    top: -0.3em;\n    /* right: -0.4em; */\n    left: 0.4em;\n    max-width: 100%;\n    font-weight: 600;\n    white-space: nowrap;\n    /* transform: translateX(100%); */\n    opacity: 0;\n  }\n  .step-option:hover .bar-label {\n    opacity: 0;\n  }\n  .step-option:hover .bar-value {\n    opacity: 1;\n  }\n  .step-option:hover .bar-fill {\n    opacity: 0.5;\n  }\n  .arrow-swoop {\n    /* transform: scaleX(-1); */\n  }\n  .step-dots {\n    /* position: absolute; */\n    /* bottom: -0.9em; */\n    /* height: 0.6em; */\n    /* padding-left: 0.6em; */\n    /* margin-top: 0.6em; */\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.1em;\n    margin-bottom: 0.3em;\n    padding-left: 1em;\n    padding-right: 1em;\n    /* left: 0;\n    right: 0; */\n  }\n  .step-dots-note {\n    padding-top: 0.3em;\n    padding-bottom: 0.6em;\n    padding-left: 2em;\n  }\n  .step-dot {\n    height: 3px;\n    width: 3px;\n    margin: 1px;\n    background: #3A3253;\n    border-radius: 100%;\n  }\n  .note {\n    display: flex;\n    align-items: center;\n    padding-right: 1em;\n    font-size: 0.7em;\n    text-align: left;\n    font-weight: 400;\n    /* margin-top: 0.3em; */\n    margin-top: -0.5em;\n    /* margin-bottom: 0.6em; */\n    line-height: 1.2em;\n    opacity: 0.7;\n    font-style: italic;\n  }\n  .note :global(svg) {\n    /* margin-left: 1em; */\n    margin-top: -0.6em;\n    margin-right: 0.6em;\n  }\n  @media (max-width: 820px) {\n    .c {\n      flex-wrap: wrap;\n    }\n    .step {\n      min-width: 15em;\n      max-height: 50vw;\n      overflow: auto;\n    }\n  }\n\t@media (max-width: 800px) {\n    .step-arrow {\n      transform: translate(90deg);\n    }\n    .c {\n      flex-direction: column;\n      flex-wrap: nowrap;\n      max-height: 100%;\n      /* overflow: hidden; */\n      align-items: flex-start;\n      justify-content: flex-start;\n      padding-left: 0;\n    }\n    .step {\n      flex: 1;\n      padding-left: 2em;\n      padding-right: 0;\n      border-bottom: 1px solid #000;\n      padding-bottom: 1em;\n      height: auto;\n      width: 100%;\n      min-width: 0;\n      /* padding-top: 1em; */\n      /* max-height: 25vh; */\n      align-items: flex-start;\n    }\n    .step:last-of-type {\n      border-bottom: none;\n    }\n    .step-label {\n      width: calc(100% + 1em);\n      margin-left: -1em;\n      box-shadow: 0 6px 8px rgba(52, 73, 94, 0.2), 0 1px 1px rgba(52, 73, 94, 0.1);\n    }\n    .c {\n      padding-top: 0;\n    }\n    .bar-value {\n      overflow: hidden;\n    }\n  }\n</style>",
    "<script>\n\timport Icon from \"./Icon.svelte\"\n\timport { testUrl, methodsUrl, getNickname, steps, parseStep, parseTime, getOrdinalLevel, ordinalLevels, parseLocation,parseDate, formatDate } from \"./data-utils\"\n\n  export let test = {}\n  export let isInline = false\n  export let onClose\n</script>\n\n<div class=\"test-info\">\n  {#if !isInline}\n    <div class=\"test-info-close\" on:click={onClose}>\n      <Icon name=\"close\" />\n    </div>\n    <h3>\n      { test.name }\n    </h3>\n  {/if}\n  <div>\n    { test.summary }\n  </div>\n  {#if test.date}\n    <h6>EUA Approval Date</h6>\n    <div class=\"date\">{ formatDate(parseDate(test.date)) }</div>\n  {/if}\n  {#if test.notes}\n    <h6>Notes</h6>\n    <div>\n      { test.notes }\n    </div>\n  {/if}\n  <h6>Steps</h6>\n  <div class=\"test-info-steps\">\n    {#each test.unparsedSteps as step, i}\n      <div class=\"test-info-step\">\n        <div class=\"test-info-step-index\">\n          { i + 1 }\n        </div>\n        <div class=\"test-info-step-text\">\n          {#if step}\n            { step }\n          {:else}\n            <i>no information available</i>\n          {/if}\n        </div>\n      </div>\n    {/each}\n  </div>\n  <div class=\"row\">\n    <div>\n      <h6>Processing Time</h6>\n      <div>\n        {#if test.time[2] && test.time[2] != \"no information available\"}\n          { test.time[2] }\n        {:else}\n          <i>no information available</i>\n        {/if}\n      </div>\n    </div>\n    <div>\n      <h6>Cost</h6>\n      <div class=\"cost\">\n        {#if test.cost}\n          {#each new Array(test.cost || 0).fill(0) as _}\n            <Icon name=\"money\" />\n          {/each}\n        {:else}\n          <i>no information available</i>\n        {/if}\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n\t.test-info {\n    position: relative;\n    width: 100%;\n\t\tpadding: 1rem 1.6rem 3em;\n\t\tbackground: #E1DCE4;\n\t\t/* color: #E1DCE4; */\n\t\tfont-size: 0.8em;\n\t\toverflow: auto;\n    box-shadow: 0 6px 8px rgba(52, 73, 94, 0.2), 0 1px 1px rgba(52, 73, 94, 0.1);\n\t}\n\t.test-info .date {\n\t\tmargin-bottom: 0.6em;\n\t}\n\t.test-info :global(h3) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tmargin-bottom: 0.3em;\n\t\tfont-size: 1.6em;\n\t}\n\t.test-info :global(p) {\n\t\tmargin: 0;\n\t\tpadding: 0.3em 0 1.6em;\n\t}\n\t.test-info-step {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 0.6em;\n\t}\n\t.test-info-step-index {\n    margin-left: 0;\n\t\tmargin-right: 0.6em;\n    opacity: 0.5;\n\t}\n\th3 {\n\t\tmargin-top: 0.3em;\n\t}\n\th6 {\n\t\tpadding-top: 1.2em;\n\t}\n\ti {\n\t\tfont-style: italic;\n\t\topacity: 0.6;\n\t}\n\t.test-info-close {\n\t\tposition: absolute;\n\t\ttop: 1.8em;\n\t\tright: 1.2em;\n\t\topacity: 0.6;\n\t\tpadding: 0.4em;\n\t\tcursor: pointer;\n\t}\n\t.test-info-close:hover {\n\t\topacity: 1;\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t.cost {\n\t\ttext-align: right;\n\t}\n\t@media (max-width: 1100px) {\n    .test-info {\n      word-break: break-word;\n    }\n  }\n</style>",
    "<script>\n\timport { flip } from \"svelte/animate\"\n  import { extent } from \"d3-array\"\n\timport { timeFormat } from \"d3-time-format\"\n  import { scaleLinear } from \"d3-scale\"\n\n\timport { locationColors, parseDate } from \"./data-utils\"\n\timport { getOrdinal } from \"./utils\"\n\timport Icon from \"./Icon.svelte\"\n\n  export let data = []\n\n  const locationLabels = {\n    poc: \"Point-of-care\",\n    centralized: \"Centralized\",\n  }\n\n  let sortMetric = \"time\"\n  let isSortReversed = false\n\n  const formatDate = timeFormat(\"%b %-d\")\n  const formatDay = timeFormat(\"%-d\")\n\n  const getMetric = (d, metric) => (\n    metric == \"name\" ? d.name :\n    metric == \"date\" ? -parseDate(d.date) :\n    metric == \"cost\" ? d.cost :\n    metric == \"time\" ? d.time[0] ? (\n        (d.time[1] - d.time[0]) / 2 + d.time[0]\n      ) : (isSortReversed ? -Infinity : Infinity) :\n    metric == \"location\" ? (\n      d.location[0] == \"centralized\" ? 100 :\n      d.location[0] == \"poc\" ? 50 :\n        (isSortReversed ? -100 : 100)\n     ) :\n      (isSortReversed ? 100 : -100)\n  )\n  $: sortedData = data.sort((a,b) => (\n    (getMetric(a, sortMetric) > getMetric(b, sortMetric) ? 1 : -1) * (isSortReversed ? -1 : 1)\n  ))\n\n  const sortBy = metric => {\n    isSortReversed = metric == sortMetric ? !isSortReversed : false\n    sortMetric = metric\n  }\n\n  $: colorScale = scaleLinear()\n    .domain(extent(data, d => d.time[1] || 0))\n    .range([\"#D9D8E1\", \"#fff\"])\n\n  const xAccessor = d => d.time[0]\n  const x1Accessor = d => d.time[1]\n  $: xScale = scaleLinear()\n    .domain(extent([\n      ...data.map(xAccessor),\n      ...data.map(x1Accessor),\n    ]))\n    .range([0, 100])\n\n  $: xTicks = [\n    [\"1 hour\", xScale(60 * 1)],\n    [\"12 hours\", xScale(60 * 12)],\n    [\"1 day\", xScale(60 * 24)],\n    [\"1.5 days\", xScale(60 * 24 * 1.5)],\n    // [\"2 days\", xScale(60 * 24 * 2)],\n  ]\n</script>\n\n<div class=\"c\">\n  <div class=\"headers\">\n    <div class=\"col title clickable\" on:click={() => sortBy(\"name\")}>\n      {#if sortMetric == \"name\"}\n        <span class=\"sort-icon\">\n          <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n        </span>\n      {/if}\n      Test name\n    </div>\n    <div class=\"col\">Methods</div>\n    <div class=\"col sym clickable\" on:click={() => sortBy(\"cost\")}>\n      <div>\n        {#if sortMetric == \"cost\"}\n          <span class=\"sort-icon\">\n            <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n          </span>\n        {/if}\n        Cost\n      </div>\n    </div>\n    <!-- <div class=\"col text clickable\" on:click={() => sortBy(\"time\")}>\n      <div>\n        {#if sortMetric == \"time\"}\n          <span class=\"sort-icon\">\n            <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n          </span>\n        {/if}\n        Time\n      </div>\n    </div> -->\n    <div class=\"col sym clickable\" on:click={() => sortBy(\"location\")}>\n      <div>\n        {#if sortMetric == \"location\"}\n          <span class=\"sort-icon\">\n            <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n          </span>\n        {/if}\n        Location\n      </div>\n    </div>\n    <div class=\"col text clickable\" on:click={() => sortBy(\"date\")}>\n      <div>\n        {#if sortMetric == \"date\"}\n          <span class=\"sort-icon\">\n            <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n          </span>\n        {/if}\n        Approvals\n      </div>\n    </div>\n    <div class=\"col text med-wide\">\n      Training\n    </div>\n  </div>\n  <div class=\"rows\">\n    {#each sortedData as test, i}\n      <div class=\"row\">\n        <div class=\"col title vert\">\n          <div class=\"name\">\n            { test.name }\n          </div>\n          <div class=\"note\">\n            { test.summary }\n          </div>\n          {#if test.notes}\n            <div class=\"note\" style=\"margin-top: 0.6em; margin-bottom: 0.6em;\">\n              { test.notes }\n            </div>\n          {/if}\n        </div>\n        <div class=\"col small vert steps\">\n          <h6 class=\"col-mobile-title\">\n            Methods\n          </h6>\n          {#each test.unparsedSteps as step, i}\n            <div class=\"step\">\n              <span class=\"index\">{ i + 1 }.</span> {#if step}\n                { step }\n              {:else}\n                <i>no information available</i>\n              {/if}\n            </div>\n          {/each}\n        </div>\n        <div class=\"col sym\">\n          <h6 class=\"col-mobile-title\" on:click={() => sortBy(\"cost\")}>\n            {#if sortMetric == \"cost\"}\n              <span class=\"sort-icon\">\n                <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n              </span>\n            {/if}\n            Cost\n          </h6>\n          {#each new Array(test.cost).fill(0) as _}\n            <Icon name=\"money\" />\n          {/each}\n        </div>\n        <!-- <div class=\"col text\" class:colored={Number.isFinite(test.time[1])}>\n          {#if test.time[2] == \"no information available\"}\n            <div class=\"note\">no information available</div>\n          {:else}\n            { test.time[2] || \"\" }\n          {/if}\n          <div\n            class=\"color-overlay\"\n            style={`background: ${Number.isFinite(test.time[1]) ? colorScale(test.time[1]) : \"#fff\"}`}\n          />\n        </div> -->\n        <div class=\"col sym vert\">\n          <h6 class=\"col-mobile-title\" on:click={() => sortBy(\"location\")}>\n            {#if sortMetric == \"location\"}\n              <span class=\"sort-icon\">\n                <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n              </span>\n            {/if}\n            Location\n          </h6>\n          <div style={`color: ${locationColors[test.location[0]]}`}>\n            <Icon name={test.location[0]} />\n          </div>\n          <div class=\"note\">\n            { locationLabels[test.location[0]] || \"\" }\n          </div>\n        </div>\n        <div class=\"col text vert\">\n          <h6 class=\"col-mobile-title\" on:click={() => sortBy(\"date\")}>\n            {#if sortMetric == \"date\"}\n              <span class=\"sort-icon\">\n                <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n              </span>\n            {/if}\n            Approvals\n          </h6>\n          { test.approvals }\n          <div class=\"note\" style=\"white-space: nowrap\">\n            { formatDate(parseDate(test.date)) }<sup>{\n              getOrdinal(formatDay(+parseDate(test.date)))\n            }</sup>\n          </div>\n        </div>\n        <div class=\"col text small med-wide\">\n          <h6 class=\"col-mobile-title\">\n            Training\n          </h6>\n          { test.training }\n        </div>\n        {#if test.time[1]}\n          <div class=\"time-row\">\n            <div class=\"time-row-label\">\n              <div class=\"time-row-sort\" on:click={() => sortBy(\"time\")}>\n                {#if sortMetric == \"time\"}\n                  <span class=\"sort-icon\">\n                    <Icon name=\"arrow\" direction={isSortReversed ? \"s\" : \"n\"} />\n                  </span>\n                {/if}\n                Processing Time\n              </div>\n              <div class=\"time-row-value\">\n                { test.time[2] || \"\" }\n              </div>\n            </div>\n            {#if test.time[1]}\n              <div class=\"time-row-chart\">\n                <div\n                  class=\"time-row-chart-fill-background\"\n                  style={[\n                    `width: ${xScale(x1Accessor(test))}%`,\n                  ].join(\"; \")}\n                />\n                <div\n                  class=\"time-row-chart-fill\"\n                  class:time-row-chart-fill--has-error={x1Accessor(test) - xAccessor(test) > 10}\n                  style={[\n                    `left: ${xScale(xAccessor(test)) - (xAccessor(test) == x1Accessor(test) ? 0.5 : 0)}%`,\n                    `width: ${Math.max(1, xScale(x1Accessor(test)) - xScale(xAccessor(test)))}%`,\n                  ].join(\"; \")}\n                />\n                {#each xTicks as [label, offset]}\n                  <div class=\"time-row-tick\" style={`left: ${offset}%`}>\n                    { label }\n                  </div>\n                {/each}\n              </div>\n            {/if}\n          </div>\n        {/if}\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .c {\n    max-width: 90rem;\n    width: 100%;\n    margin: 0 auto;\n    /* padding: 0 1em; */\n    overflow: auto;\n  }\n  .headers {\n    position: sticky;\n    top: 0;\n    display: flex;\n    z-index: 100;\n  }\n  sup {\n    font-size: 0.7em;\n    margin-bottom: 0.4em;\n  }\n  .headers .col {\n    background: #E1DCE4;\n    font-weight: 600;\n  }\n  .row {\n    display: flex;\n    flex-wrap: wrap;\n    border-bottom: 1px solid #EAEAEE;\n  }\n  .row:hover {\n    /* background: #f4f4f4; */\n  }\n  .row:hover .time-row-chart {\n    /* background: #eaeaee; */\n  }\n  .col {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 1em;\n    flex: 3 0 1em;\n    padding: 0.6rem 1rem;\n    overflow: hidden;\n  }\n  .color-overlay {\n    position: absolute;\n    top: -1px;\n    right: 0;\n    bottom: -1px;\n    left: 0;\n    mix-blend-mode: multiply;\n  }\n  .text {\n    flex: 0 0 7rem;\n    text-align: left;\n  }\n  .bold {\n    font-weight: 600;\n  }\n  .small {\n    font-size: 0.7em;\n    line-height: 1.3em;\n  }\n  .vert {\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n  }\n  .sym {\n    flex: 0 7rem;\n    text-align: center;\n    justify-content: center;\n    align-items: center;\n    /* font-size: 0.8em; */\n    /* font-weight: 900; */\n  }\n  .sym .note {\n    padding-right: 0;\n  }\n  .colored {\n    background: #D9D8E1;\n    overflow: visible;\n  }\n  .row:hover .colored {\n    /* background: none; */\n  }\n  .note {\n    display: flex;\n    align-items: center;\n    padding-right: 1em;\n    margin-top: 0.3em;\n    font-size: 0.76em;\n    text-align: left;\n    font-weight: 400;\n    line-height: 1.2em;\n    opacity: 0.7;\n    font-style: italic;\n  }\n  i {\n    opacity: 0.5;\n  }\n  .index {\n    margin-left: -1em;\n    opacity: 0.5;\n  }\n  .step {\n    margin: 0.2em 0;\n  }\n  .name {\n    margin-bottom: 0.3em;\n    font-weight: 700;\n  }\n  .clickable {\n    cursor: pointer;\n  }\n  .sort-icon {\n    position: absolute;\n    margin-top: 0.3em;\n    margin-left: -1.3em;\n    color: #759D8C;\n    font-size: 0.7em;\n  }\n  .med-wide {\n    flex: 0 0 15rem;\n    overflow: hidden;\n  }\n  .title {\n    flex: 0 0 27rem;\n    justify-content: flex-start;\n    padding-top: 1em;\n  }\n  .steps {\n    padding-top: 1.2em;\n    padding-bottom: 1.2em;\n  }\n  .time-row {\n    flex: 1 0 100%;\n    display: flex;\n    margin-top: 0.9em;\n  }\n  .time-row-label {\n    width: 27rem;\n    flex: 0 0 27rem;\n    text-align: right;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    padding-right: 0.6em;\n    font-size: 0.8em;\n    /* font-weight: 600; */\n  }\n  .time-row-sort {\n    position: relative;\n    text-align: left;\n    cursor: pointer;\n    padding-left: 1em;\n  }\n  .time-row-value {\n    margin-top: 0.2em;\n    font-size: 0.9em;\n    opacity: 0.6;\n  }\n  .time-row-chart {\n    position: relative;\n    flex: 1;\n    height: 3em;\n    background: #f4f4f4;\n  }\n  .time-row-chart-fill {\n    height: 1em;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    /* border-radius: 1em; */\n    /* opacity: 0.3; */\n    /* mix-blend-mode: multiply; */\n    transform: translate(0, -50%);\n  }\n  .time-row-tick {\n    position: absolute;\n    top: -1.5em;\n    left: 0;\n    font-size: 0.5em;\n    /* border-radius: 1em; */\n    /* opacity: 0.3; */\n    /* mix-blend-mode: multiply; */\n    text-transform: uppercase;\n    letter-spacing: 0.1em;\n    transform: translate(-50%, 0);\n    opacity: 0.6;\n    white-space: nowrap;\n  }\n  .time-row-tick:before {\n    content: \"\";\n    position: absolute;\n    bottom: -0.9em;\n    left: 50%;\n    height: 0.5em;\n    margin-left: -1px;\n    border-left: 1px solid;\n    opacity: 0.6;\n  }\n  .time-row-chart-fill--has-error {\n    border-left: 1.5px solid #6d84aa;\n    border-right: 1.5px solid #6d84aa;\n    background: linear-gradient(\n      to right,\n      rgba(164, 191, 238, 0.3),\n      rgba(79, 161, 146, 0.3)\n    );\n    background-size: 70em;\n  }\n  .time-row-chart-fill:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 0.7em;\n    height: 0.7em;\n    background: #7b97d4;\n    /* background: currentColor; */\n    border-radius: 100%;\n    border: 1px solid #6d84aa;\n    transform: translate(-50%, -50%);\n  }\n  .time-row-chart-fill-background {\n    height: 0.5em;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    /* border-radius: 0 1em 1em 0; */\n    background: linear-gradient(\n      to right,\n      rgb(164, 191, 238),\n      rgb(79, 161, 146)\n    );\n    background-size: 70em;\n    opacity: 0.5;\n    /* border: 1px solid #6d84aa; */\n    /* background-size: 70em; */\n    transform: translate(0, -50%);\n  }\n  .col-mobile-title {\n    display: none;\n  }\n  @media (max-width: 1200px) {\n    .c {\n      font-size: 0.9em;\n    }\n    .title {\n      flex: 0 0 19rem;\n    }\n  }\n  @media (max-width: 1000px) {\n    .row {\n      flex-wrap: wrap;\n      align-items: flex-start;\n    }\n    .col {\n      min-width: 8em;\n      flex-wrap: wrap;\n    }\n    .headers {\n      display: none;\n    }\n    .col-mobile-title {\n      display: block;\n      width: 100%;\n      padding-bottom: 0.9em;\n      font-size: 0.6rem;\n    }\n    .title {\n      width: 100%;\n      flex: 0 0 100%;\n    }\n    .steps {\n      flex: 3 0 15em;\n      min-width: 15em;\n    }\n    .time-row-label {\n      flex: 0 0 10em;\n      width: 10em;\n    }\n  }\n</style>",
    "<script>\n  import { extent } from \"d3-array\"\n  import { scaleLinear, scaleSqrt } from \"d3-scale\"\n  import { timeMonth } from \"d3-time\"\n  import { timeFormat } from \"d3-time-format\"\n\n  import { flatten } from \"./utils\"\n  import { parseDate } from \"./data-utils\"\n\n  export let data = []\n\n  let width = 1200\n  let height = 300\n\n  const xAccessor = d => parseDate(d.date)\n  const yAccessor = d => d.time[0]\n  const y1Accessor = d => d.time[1]\n  const rAccessor = d => d.cost\n\n  $: rScale = scaleSqrt()\n    .domain(extent(data, rAccessor))\n    .range([5, 20])\n\n  $: xScale = scaleLinear()\n    .domain(extent(data, xAccessor))\n    .range([0, width])\n\n  $: xTicks = timeMonth.range(...xScale.domain())\n    .map(d => ([\n      timeFormat(\"%B\")(d),\n      xScale(d),\n    ]))\n\n  $: yScale = scaleLinear()\n    .domain(extent([\n      ...data.map(yAccessor),\n      ...data.map(y1Accessor),\n    ]))\n    .range([height, 1])\n\n  $: yTicks = yScale.ticks(3)\n    .map(d => ([\n      d,\n      yScale(d),\n    ]))\n\n</script>\n\n<div class=\"c\" bind:clientWidth={width}>\n  <svg {width} {height}>\n    {#each data as test}\n      <line\n        class=\"test\"\n        x1={xScale(xAccessor(test))}\n        x2={xScale(xAccessor(test))}\n        y1={yScale(yAccessor(test)) || height + 20}\n        y2={yScale(y1Accessor(test)) || height + 20}\n      />\n    {/each}\n    {#each xTicks as [tick, x]}\n      <text\n        x={x}\n        y={height}\n      >\n        { tick }\n      </text>\n    {/each}\n    {#each yTicks as [tick, y]}\n      <text\n        x={0}\n        y={y}\n        style=\"text-anchor: end\"\n      >\n        { tick }\n      </text>\n    {/each}\n  </svg>\n</div>\n\n<style>\n  .c {\n    width: 80%;\n    margin: 1em auto;\n  }\n  svg {\n    overflow: visible;\n  }\n  .test {\n    fill: #256D69;\n    stroke: #256D69;\n    stroke-width: 9;\n    fill-opacity: 0.6;\n    mix-blend-mode: multiply;\n    stroke-linecap: round;\n  }\n  text {\n    text-transform: uppercase;\n    letter-spacing: 0.1em;\n    font-size: 0.9em;\n  }\n</style>",
    "<script>\n  import Segment from \"./PieChart/Segment.svelte\"\n  import Legend from \"./PieChart/Legend.svelte\"\n  import {\n    summarised_data,\n    lod_viral_material,\n  } from \"./data_summarised\"\n\n  const width = 1000\n  const height = 600\n\n  const radius = 180\n\n  const x = 170\n  const x_chart = 180\n  const x_legends = 240\n\n  const y_titles = 50\n  const y_titles_second_line = y_titles + 22\n  const y_graphs = y_titles + 240\n  const y_legends = -250\n  const y_data_source = 220\n\n  let selected_index = null;\n  const mouse_move = v => () => selected_index = v\n</script>\n\n<div>\n  <svg {width} {height} class=\"top\" overflow=\"scroll\">\n    <svg x={x}>\n\n      <svg x={x_chart} y={y_graphs}>\n        {#each lod_viral_material as { ratio, begin, color }, i}\n          <Segment\n            highlighted={i === selected_index}\n            radius={radius}\n            ratio={ratio}\n            color={color}\n            begin={begin}\n            mouseenter={mouse_move(i)}\n            mouseleave={mouse_move(null)}\n          />\n        {/each}\n\n        {#each lod_viral_material as { color, label_w_percentage, refs }, i}\n          <Legend\n            highlighted={i === selected_index}\n            text=\"{label_w_percentage}\"\n            color={color}\n            x={x_legends}\n            y={y_legends + i * 65}\n            mouseenter={mouse_move(i)}\n            mouseleave={mouse_move(null)}\n          />\n          <text\n            x={x_legends + 30}\n            y={y_legends + 33 + i * 65}\n            class=\"references\"\n          >\n            <a href={refs[0]}>Example in EUA</a>\n          </text>\n        {/each}\n\n        <text class=\"data_source\" y={y_data_source}>\n          {@html `Data from ${summarised_data.lod_viral_material.have_parsed} EUAs`}\n        </text>\n      </svg>\n    </svg>\n\n  </svg>\n</div>\n\n<style>\n  svg.top {\n    /* overflow: scroll; */\n    margin: 20px 100px;\n  }\n  svg {\n    overflow: visible;\n  }\n  text {\n    text-anchor: start;\n    font-size: 0.8em;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n    pointer-events: none;\n  }\n  text.data_source {\n    font-size: 0.7em;\n    text-anchor: middle;\n  }\n  text.references {\n    font-size: 0.62em;\n    text-transform: none;\n  }\n  a {\n    pointer-events: all;\n    fill: rgb(0, 100, 200);\n  }\n  a:visited {\n    fill: rgb(0, 80, 160);\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}